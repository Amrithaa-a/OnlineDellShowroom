@model OnlineDellShowroom.Models.UserSignup

@{
    Layout = "~/Views/Layout/UserLayout.cshtml";
    ViewBag.Title = "EditProfile";
}

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card bg-light">
                <div class="card-header">
                    <h2 class="text-center">Edit Profile</h2>
                </div>
                <div class="card-body">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.UserSignupId)

                        <div class="form-group mt-3">
                            @Html.LabelFor(model => model.Firstname, htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.Firstname, new { htmlAttributes = new { @class = "form-control", id = "Firstname" } })
                                <span id="firstnameError" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="form-group mt-3">
                            @Html.LabelFor(model => model.Lastname, htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.Lastname, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Lastname, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group mt-3">
                            @Html.LabelFor(model => model.Dateofbirth, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-7">
                                @Html.TextBoxFor(model => model.Dateofbirth, "{0:yyyy-MM-dd}", new { @class = "form-control", id = "Dateofbirth" })
                                @Html.ValidationMessageFor(model => model.Dateofbirth, "", new { @class = "text-danger" })
                                <span id="ageError" class="text-danger"></span>
                            </div>
                        </div>



                        <div class="form-group mt-3">
                            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div class="form-check form-check-inline">
                                    @Html.RadioButtonFor(model => model.Gender, "Male", new { @class = "form-check-input" })
                                    @Html.Label("Male", new { @class = "form-check-label" })
                                </div>
                                <div class="form-check form-check-inline">
                                    @Html.RadioButtonFor(model => model.Gender, "Female", new { @class = "form-check-input" })
                                    @Html.Label("Female", new { @class = "form-check-label" })
                                </div>
                                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group mt-3">
                            @Html.LabelFor(model => model.Mobilenumber, htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.Mobilenumber, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Mobilenumber, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group mt-3">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group mt-3">
                            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", id = "Address" } })
                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger", id = "addressError" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.State, htmlAttributes: new { id = "State", @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.State, Model.States, "-- Select State --", new { @class = "form-control", id = "StateDropdown" })
                                @Html.HiddenFor(model => model.StateId)
                                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.City, htmlAttributes: new { id = "City", @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.City, Model.Cities, "-- Select City --", new { @class = "form-control", id = "CityDropdown" })
                                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group mt-3">
                            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group mt-3" id="passwordDiv">
                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.PasswordFor(model => model.Password, new { @class = "form-control", id = "Password" })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger", id = "passwordError" })
                            </div>
                        </div>

                        <div class="form-group row">
                            <div class="col-md-7 offset-md-5">
                                <input type="submit" value="Save" class="btn btn-primary" />
                            </div>
                        </div>
                    </div>
                    }
                </div>
            </div>
            <div class="text-center mt-4">
                @Html.ActionLink("View products", "Index")
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/JavaScript/Onfocusforuser.js")
}