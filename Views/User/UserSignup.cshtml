@model OnlineDellShowroom.Models.UserSignup

@{
    ViewBag.Title = "UserSignup";
}
@if (TempData["SigninErrorMsg"] != null)
{
    <div class="alert alert-danger">
        <strong>Error!</strong> @TempData["SigninErrorMsg"]
    </div>
}

<div class="container mt-9">
    <div class="row justify-content-center">
        <div class="col-md-6">
            @using (Html.BeginForm("UserSignup", "User", FormMethod.Post, new { @class = "your-form-class", id = "myForm" }))
            {
                @Html.AntiForgeryToken()

                <div class="card bg-light p-4 rounded-lg shadow">
                    <div class="card-body">
                        <h4 class="card-title text-center mb-4">Sign up</h4>
                        <hr />

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group mt-3">
                            @Html.LabelFor(model => model.Firstname, htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.Firstname, new { htmlAttributes = new { @class = "form-control", @placeholder = "First name", id = "Firstname" } })
                                <span id="firstnameError" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="form-group mt-3">
                            @Html.LabelFor(model => model.Lastname, htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.Lastname, new { htmlAttributes = new { @class = "form-control", @placeholder = "Last name", id = "Lastname" } })
                                <span id="lastnameError" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="form-group mt-3">
                            @Html.LabelFor(model => model.Dateofbirth, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.Dateofbirth, new { htmlAttributes = new { @class = "form-control", id = "Dateofbirth", max = DateTime.Now.ToString("yyyy-MM-dd") } })
                                @Html.ValidationMessageFor(model => model.Dateofbirth, "", new { @class = "text-danger" })
                                <span id="ageError" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="form-group mt-3" id="genderDiv">
                            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div class="form-check form-check-inline">
                                    @Html.RadioButtonFor(model => model.Gender, "Male", new { @class = "form-check-input", id = "GenderMale" })
                                    @Html.Label("Male", new { @class = "form-check-label" })
                                </div>
                                <div class="form-check form-check-inline">
                                    @Html.RadioButtonFor(model => model.Gender, "Female", new { @class = "form-check-input", id = "GenderFemale" })
                                    @Html.Label("Female", new { @class = "form-check-label" })
                                </div>
                                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group mt-3" id="mobileNumberDiv">
                            @Html.LabelFor(model => model.Mobilenumber, htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.Mobilenumber, new { htmlAttributes = new { @class = "form-control", @placeholder = "Mobile number", id = "Mobilenumber" } })
                                @Html.ValidationMessageFor(model => model.Mobilenumber, "", new { @class = "text-danger", id = "mobilenumberError" })
                            </div>
                        </div>

                        <div class="form-group mt-3">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Email", id = "Email" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger", id = "emailError" })
                            </div>
                        </div>
                        <div class="form-group mt-3">
                            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @placeholder = "Address", id = "Address" } })
                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger", id = "addressError" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.State, htmlAttributes: new { id = "State", @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.State, Model.States, "-- Select State --", new { @class = "form-control", id = "StateDropdown" })
                                @Html.HiddenFor(model => model.StateId)
                                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.City, htmlAttributes: new { id = "City", @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.City, Model.Cities, "-- Select City --", new { @class = "form-control", id = "CityDropdown" })
                                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Username, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control", @placeholder = "Username", id = "Username" } })
                                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger", id = "usernameError" })
                            </div>
                        </div>

                        <div class="form-group mt-3" id="passwordDiv">
                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.PasswordFor(model => model.Password, new { @class = "form-control", @placeholder = "Password", id = "Password" })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger", id = "passwordError" })
                            </div>
                        </div>

                        <div class="form-group mt-3" id="confirmPasswordDiv">
                            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-7">
                                @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control", @placeholder = "Confirm password", id = "ConfirmPassword" })
                                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger", id = "confirmPasswordError" })
                            </div>
                        </div>

                        <div class="form-group mt-4">
                            <div class="text-center">
                                <input type="submit" id="signup" value="Sign Up" class="btn btn-primary" />
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row justify-content-center mt-3">
                    <div class="col-md-6">
                        <p class="text-center">If already have an account, <a href="@Url.Action("UserSignin", "User")">Sign in here</a>.</p>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/JavaScript/Onfocusforuser.js")
}
